#ifndef USART_H
#define USART_H

// ボーレート
#define BAUD 9600

/*
 * 本シリアル制御ライブラリはソフトウェアで内部的に
 * それぞれ 256 バイトの送信バッファと、受信バッファを持つ
 */

/*
 * USART H/W の初期化
 */
void usart_init();

/**********************************************************************
 * 受信関数
 *  受信処理は受信完了割込みの処理により自動的に受信バッファへ格納される
 *  (受信時のバッファオーバーフローは考慮していない)
 **********************************************************************/

/*
 * データを受信しているときに 1 がかえる。受信データがないときは 0。
 */
int usart_is_received();

/* 
 * データを受信するまで待つ関数
 */
void usart_wait_for_receiving();

/*
 * 受信したデータを 1 バイト読む関数。受信バッファが空の時は受信するまで待つ。
 */
char usart_get_received_chr();

/*
 * 受信したデータを 1 バイト読む関数。受信バッファが空の時は即返る。
 *  out:  受信データを格納するポインタ
 *  返値: 1: 受信データあり
 *        0: 受信バッファが空
 */
int usart_get_received_chr_nowait( char *out );


/**********************************************************************
 * 送信関数
 *  送信バッファへ書き込んだデータは送信完了割込を利用して自動的に送信される
 *  (送信バッファへの書き込むときのバッファオーバーフローは考慮していない)
 **********************************************************************/

/*
 * 送信レジスタが空になるまで待つ関数
 *  送信バッファがあるため通常は使う場面は少ないと思われる
 */
void usart_wait_for_sending();

/*
 * 送信バッファに 1 バイト書き込む関数
 *  書き込んだデータは送信レジスタが空になった時点で割込処理によって 1 バイトずつ送られる
 */

void usart_send_char(int c);

/*
 * 送信バッファにバイト列を書き込む関数
 *  送信バッファへの書き込みオーバーフローは考慮していない
 */
void usart_send_string(char *p);


#endif /* USART_H */
